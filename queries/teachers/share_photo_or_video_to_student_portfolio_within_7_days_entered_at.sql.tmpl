WITH results AS (
  SELECT
    pop.experiment_id
  , pop.entity_id
  , pop.variant
  , pop.entered_at
  , case when bool_or(event.entityid is not null) then 1 else 0 end as outcome
  FROM %(table_name)s AS pop
  LEFT JOIN minotaur.experiment_metrics_teacher_event event 
    ON event.entityid = pop.entity_id
    AND event.eventday >= date_trunc('day', pop.entered_at)
    AND event.eventday < date_trunc('day', pop.entered_at) + interval '7 days'
  /* The where clause limits to users who have already entered the experiment 
  on a given date; important for backfilling. */
  WHERE pop.entered_at <= '%(ds)s'::TIMESTAMP
  GROUP BY 1,2,3,4
)

SELECT
  experiment_id
, variant
, '%(metric_name)s' AS metric_name
, 'PROPORTIONAL' AS metric_type
, 'any' AS segment
, '%(ds)s'::TIMESTAMP AS day
, SUM(outcome) AS numerator
, COUNT(entity_id) AS denominator
, SUM(outcome)::FLOAT / COUNT(entity_id) AS mean
, STDDEV(outcome) AS standard_deviation
FROM results
GROUP BY 1,2,3,4,5,6
